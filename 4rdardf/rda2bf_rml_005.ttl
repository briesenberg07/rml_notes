# input lost_airline_colors
# ref: https://github.com/uwlib-cams/rml/blob/master/getting_started/2021-10-12-demo/open_and_populate_a_blank_node.ttl

# rml prefixes
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
# other prefixes
@prefix ex: <http://example.org/>.
@prefix bf: <http://id.loc.gov/ontologies/bibframe/>.
@prefix rdaw: <http://rdaregistry.info/Elements/w/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rdac: <http://rdaregistry.info/Elements/c/>.
# per https://github.com/uwlib-cams/rml/blob/master/getting_started/2021-10-12-demo/literal_or_IRI.ttl
ex:ManifestationMap a rr:TriplesMap ;
  rml:logicalSource [
    rml:source "lost_airline_colors.rdf" ;
    rml:referenceFormulation ql:XPath ;
    # MCM gives @about = resourceIri in her map...
      # [?] could I use a regex etc. to restrict to Sinopia resources?
      # regex in XPath 1.0??
    rml:iterator "RDF/Description[starts-with(@about, 'https://api.sinopia.io')][type[@resource='http://rdaregistry.info/Elements/c/C10007']]"
  ] ;
  rr:subjectMap [
  rml:reference "@about";
  rr:class bf:Instance
  ] ;
# RE: comment on lines 30 and 31 in rda2bf_rml_004.ttl:
  # OKOKOK I think I get it
    # it SEEMS like we are saying "every single rdac:Manifestation gets
    # a bf:provisionActivity statement"
    # BUT if you look at the parentTriplesMap below, you'll see that we are now
    # iterating only on rdac:M resources with 30083 statements...
  # IRIs
  rr:predicateObjectMap [
  rr:predicate bf:provisionActivity ;
    rr:objectMap [
      rr:parentTriplesMap ex:PublicationMap ;
      rr:termType rr:BlankNode
    ]
  ] .
  ex:PublicationMap a rr:TriplesMap ;
    rml:logicalSource [
    rml:source "lost_airline_colors.rdf" ;
    rml:referenceFormulation ql:XPath ;
    rml:iterator "RDF/Description[P30083]"
    ] ;
    rr:subjectMap [
      rr:termType rr:BlankNode ;
      rr:class bf:Publication
    ] ;
    # OK NOW we will add TWO (2) predicateObjectMap statements
      # to accomodate P30083 values that are EITHER IRIs or lits
    # first accomodate literals by opening another bnode
    rr:predicateObjectMap [
    rr:predicate bf:agent ;
    rr:objectMap [
    # remember to add not(@resource) in AgentMap
      rr:parentTriplesMap ex:AgentMap ;
      rr:termType rr:BlankNode
      ]
    ] ;
    rr:predicateObjectMap [
      rr:predicate bf:agent ;
      rr:objectMap [
        rml:reference "P30083/@resource" ;
        rr:termType rr:IRI
        ]
    ] .
    ex:AgentMap a rr:TriplesMap ;
      rml:logicalSource [
        rml:source "lost_airline_colors.rdf" ;
        rml:referenceFormulation ql:XPath ;
        rml:iterator "RDF/Description[P30083]"
      ] ;
    rr:subjectMap [
      rr:termType rr:BlankNode ;
      rr:class bf:Agent
    ] ;
    rr:predicateObjectMap [
      rr:predicate rdfs:label ;
      rr:objectMap [
        rml:reference "P30083[not(@resource)]" ;
        rr:termType rr:Literal
      ]
    ] .
