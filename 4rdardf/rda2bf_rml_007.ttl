# Mapping 22909bd1-6249-400e-9b5a-3a46895698a2.xml RDA/RDF to BF
# rml prefixes
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
# other prefixes
@prefix ex: <http://example.org/>.
@prefix bf: <http://id.loc.gov/ontologies/bibframe/>.
@prefix rdae: <http://rdaregistry.info/Elements/e/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.

ex:ExampleMap a rr:TriplesMap ;
  rml:logicalSource [
    rml:source "22909bd1-6249-400e-9b5a-3a46895698a2.xml" ;
    rml:referenceFormulation ql:XPath ;
    # Does MCM start her XPath with '/'?
    rml:iterator "RDF/Description[starts-with(@about, 'https://api.sinopia.io/resource/')]" # no rdf:type given in this practice file
  ] ;
  rr:subjectMap [
    rml:reference "@about" ;
    rr:class bf:Work
  ] ;
  rr:predicateObjectMap [
    rr:predicate bf:contribution ;
    rr:objectMap [
      # currently creating only one Contribution bnode, need to create multiple...
      # is this where the problem is?
      rr:reference "P20330" ;
      rr:parentTriplesMap ex:ContributionMap ;
      rr:termType rr:BlankNode
    ]
  ] .
ex:ContributionMap a rr:TriplesMap ;
  # repeat logical source for each rr:TriplesMap, right?
  rml:logicalSource [
    rml:source "22909bd1-6249-400e-9b5a-3a46895698a2.xml" ;
    rml:referenceFormulation ql:XPath ;
    # possible to rework this same ContributionMap for use with P20045?
    rml:iterator "RDF/Description[P20330]"
  ] ;
  # is this where the problem is??
  rr:subjectMap [
    rr:reference "P20330" ;
    rr:termType rr:BlankNode ;
    rr:class bf:Contribution
  ] ;
  # for p20330 = literal, create another bnode for the agent in ex:AgentMap
  rr:predicateObjectMap [
    rr:predicate bf:agent ;
    rr:objectMap [
      rr:reference "P20330[not(@resource)]" ;
      rr:parentTriplesMap ex:AgentMap ;
      rr:termType rr:BlankNode
    ]
  ] ;
  # for p20330 = IRI, no need to create another bnode, use IRI as value for bf:agent
  rr:predicateObjectMap [
    rr:predicate bf:agent ;
    rr:objectMap [
      rml:reference "P20330/@resource" ;
      rr:termType rr:IRI
    ]
  ] .
ex:AgentMap a rr:TriplesMap ;
  rml:logicalSource [
    rml:source "22909bd1-6249-400e-9b5a-3a46895698a2.xml" ;
    rml:referenceFormulation ql:XPath ;
    # my iterators were wrong--they included the Pnumber as part of the path, but should have been a predicate??
    # was using 'rml:iterator "RDF/Description[P20330[not(@resource)]]"' but I'll specify not(@resource in the objectMap's reference...)
    rml:iterator "RDF/Description[P20330[not(@resource)]]"
  ] ;
  rr:subjectMap [
    rr:termType rr:BlankNode ;
    rr:reference "P20030[not(@resource)]" ;
    rr:class bf:Agent
  ] ;
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    # tried rr:object shortcut but now changing back to rr:objectMap...
    rr:objectMap [
      rml:reference "P20330[not(@resource)]" ;
      rr:termType rr:Literal
    ]
  ] .
