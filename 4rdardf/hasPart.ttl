@prefix bf: <http://id.loc.gov/ontologies/bibframe/>.
@prefix ex: <http://example.org/rules/>.
@prefix rdaw: <http://rdaregistry.info/Elements/w/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.

# BMR - attempt to fix error message:
  # 'Does the file exist and is it valid Turtle?'
# fixing typos (not really sure whether semicolons are being parsed as part of
  # prefixed IRIs but adding a space just in case)
# rename the second ExampleMap - both TriplesMaps had the same IRI (ex:ExampleMap)

# Let's create a triples map!
ex:ExampleMap001 a rr:TriplesMap ;

# First, we need a "logical source"
  rml:logicalSource [
    rml:source "003c0e59-9ab1-4fc2-8522-1a7b78601fef.xml" ; # file path to our data
    rml:referenceFormulation ql:XPath ; # what format our source data is in
    rml:iterator "/RDF/Description" # our parent properties
  ] ;
  rr:subjectMap [
    rml:reference "@about" ; # "reference" means we're referencing a value that exists in our data
    rr:class bf:Work # optional: add a class
  ] ;
  rr:predicateObjectMap [
    rr:predicate bf:hasPart ; # determine predicate
    rr:objectMap [
      rml:reference "P10147/@resource" ; # again using "reference" to locate an existing value
      rr:termType rr:IRI # type as a literal, IRI, or blank node
    ]
  ] ;
    rr:predicateObjectMap [
      rr:predicate bf:hasPart ; # determine predicate
      rr:objectMap [
        rr:parentTriplesMap ex:ExampleMap002 ;
        rr:termType rr:BlankNode # type as a literal, IRI, or blank node
      ]
    ] .

ex:ExampleMap002 a rr:TriplesMap ;
  rml:logicalSource [
    rml:source "003c0e59-9ab1-4fc2-8522-1a7b78601fef.xml" ;
    rml:referenceFormulation ql:XPath ;
    rml:iterator "/RDF/Description[P10147[not(@resource)]]"
  ] ;

  rr:subjectMap [
    rr:termType rr:BlankNode ;
    rr:class bf:Work
  ] ;
  rr:predicateObjectMap [
    rr:predicate rdfs:label ;
    rr:objectMap [
      rml:reference "P10147[not(@resource)]" ;
      rr:termType rr:Literal ;
      rml:languageMap [
        rml:reference "P10147/@lang"
      ]
    ]
  ] .
